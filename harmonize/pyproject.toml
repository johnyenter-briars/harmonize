[project]
name = "harmonize"
version = "0.1.0"
description = "API for harmonize frontend"
requires-python = ">=3.12"
dependencies = [
    "fastapi[standard]",
    "mutagen",
    "yt-dlp",
    "youtube-search-python",
    "Pillow",
    "requests",
    "ruff",
    "sqlmodel",
]
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv.pip]
python = "3.12"

[tool.ruff]
# Same as Black.
line-length = 100
indent-width = 4
target-version = "py312"

[tool.ruff.flake8-bugbear]
extend-immutable-calls = [
    "fastapi.Depends",
    "fastapi.params.Depends",
    "fastapi.Query",
    "fastapi.params.Query",
]


[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # Disable documentation lints
    "ANN",
    "D",
    # Disable naming lints
    "N",
    # Disable lint rules that conflict with ruff formatting
    "W191",
    "E111",
    "E114",
    "E117",
    "E501",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002",
    "RET504",
    "BLE",
]

fixable = ["ALL"]
unfixable = ["ANN"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
